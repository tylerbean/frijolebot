# Discord Link Bot Kubernetes Deployment
# This deployment uses the public Docker image: tylerjbean/frijolebot:latest
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frijolebot
  labels:
    app: frijolebot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frijolebot
  template:
    metadata:
      labels:
        app: frijolebot
    spec:
      containers:
      - name: frijolebot
        image: tylerjbean/frijolebot:latest
        ports:
        - containerPort: 3000
          name: health
        env:
        - name: DISCORD_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              name: frijolebot-secrets
              key: discord-bot-token
        - name: DISCORD_GUILD_ID
          valueFrom:
            configMapKeyRef:
              name: frijolebot-config
              key: discord-guild-id
        - name: DISCORD_CHANNEL_GENERAL
          valueFrom:
            configMapKeyRef:
              name: frijolebot-config
              key: discord-channel-general
        - name: DISCORD_CHANNEL_LINKS
          valueFrom:
            configMapKeyRef:
              name: frijolebot-config
              key: discord-channel-links
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: frijolebot-config
              key: postgres-host
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: frijolebot-config
              key: postgres-port
        - name: POSTGRES_DATABASE
          valueFrom:
            configMapKeyRef:
              name: frijolebot-config
              key: postgres-database
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: frijolebot-config
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: frijolebot-secrets
              key: postgres-password
        - name: HEALTH_CHECK_PORT
          value: "3000"
        - name: NODE_ENV
          value: "production"
        - name: RATE_LIMIT_ENABLED
          value: "true"
        - name: RATE_LIMIT_WINDOW_MS
          value: "60000"
        - name: RATE_LIMIT_MAX_REQUESTS
          value: "5"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: whatsapp-sessions
          mountPath: /app/auth_info_baileys
      volumes:
      - name: logs
        emptyDir: {}
      - name: whatsapp-sessions
        persistentVolumeClaim:
          claimName: frijolebot-whatsapp-sessions
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: frijolebot-service
  labels:
    app: frijolebot
spec:
  selector:
    app: frijolebot
  ports:
  - port: 3000
    targetPort: 3000
    name: health
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frijolebot-config
data:
  discord-guild-id: "YOUR_GUILD_ID"
  discord-channel-general: "YOUR_GENERAL_CHANNEL_ID"
  discord-channel-links: "YOUR_LINKS_CHANNEL_ID"
  postgres-host: "postgres-service"
  postgres-port: "5432"
  postgres-database: "frijolebot"
  postgres-user: "frijolebot"
---
apiVersion: v1
kind: Secret
metadata:
  name: frijolebot-secrets
type: Opaque
data:
  # Base64 encoded values
  discord-bot-token: "YOUR_BASE64_ENCODED_DISCORD_TOKEN"
  postgres-password: "YOUR_BASE64_ENCODED_POSTGRES_PASSWORD"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: frijolebot-whatsapp-sessions
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
